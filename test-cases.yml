
---
- summary: |
    Проверка входа пользователя с существующими логином и паролем
requirement: |
    При верном вводе логине и пароля пользователь должен войти в систему
prerequisites: |
   Зайти на сайт https://codebattle.hexlet.io/
test-data: |
    Email = ilona@gmail.com
    Пароль = password
steps:
    - на главной странице нажать кнопку "Sign in"
    - Ввести логин и пароль 
    - Нажать кнопку "Submit"
expected-result: |
    Отобаражена главная страница с уведомлением "Successfully authenticated"
   
   
- summary: |
    Проверка входа пользователя через Github
requirement: |
    При синхронизации аккаунта через Github пользователь должен войти в систему
prerequisites: |
   Зайти на сайт https://codebattle.hexlet.io/
test-data: |
   Действующий аккаунт в GitHub
   Email = ilona@gmail.com
   Пароль = password
steps:
    - На главной странице нажать кнопку "Sign in"
    - Нажать кнопку "Sign in with GitHub"
    - Ввести логин и пароль 
    - Нажать кнопку "Sign in"
  expected-result: |
    Отобаражена главная страница с уведомлением "Successfully authenticated"
    
    
- summary: |
    Проверка входа пользователя через Discord
requirement: |
    При синхронизации аккаунта через Discord пользователь должен войти в систему
prerequisites: |
   Зайти на сайт https://codebattle.hexlet.io/
test-data: |
   Действующий аккаунт в Discord
   Email = ilona@gmail.com
   Пароль = password
steps:
    - На главной странице нажать кнопку "Sign in"
    - Нажать кнопку "Sign in with Discord"
    - Ввести логин и пароль 
    - Нажать кнопку "Log in"
  expected-result: |
    Отобаражена главная страница с уведомлением "Successfully authenticated"
    
    
    
- summary: |
    Проверка входа пользователя с несуществующими Email
requirement: |
    При неправильном Email пользователь должен получить сообщение об ошибке
prerequisites:
      Зайти на сайт https://codebattle.hexlet.io/
test-data: |
    Email = ilona@gmail.com
    Пароль = password
steps:
    - на главной странице нажать кнопку "Sign in"
    - Ввести логин и пароль 
    - Нажать кнопку "Submit"
expected-result: |
     Отображена ошибка "EMAIL_NOT_FOUND" на странице авторизации
    
        
- summary: |
    Проверка входа пользователя с несуществующими паролем
requirement: |
    При неправильном вводе пароля, пользователь должен получить сообщение об ошибке
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
test-data: |
    Email = ilona@gmail.com
    Пароль = badpassword
steps:
    - на главной странице нажать кнопку "Sign in"
    - Ввести логин и пароль 
    - Нажать кнопку "Submit"
expected-result: |
     Отображена ошибка "INVALID_PASSWORD" на странице авторизации
    
    
- summary: |
    Восстановление пароля
requirement: |
    Восстановление пароля, зарегистрированым пользователем
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
test-data: |
    Email = ilona@gmail.com
    Password = password_new
steps:
    - На главной странице нажать кнопку "Sign in"
    - Нажать кнопку "Forgot your password"
    - На странице "Forgot your password?" ввести Email
    - Нажать кнопку "Submit"
    - В приложении электронной почты открыть письмо от noreply@codebattle-5f929.firebaseapp.com
    - Перейти по ссылке в письме
    - На странице "Reset your password" ввести новый пароль
    - Нажимать "Save"
    - Зайти на главную страницу сайта (https://codebattle.hexlet.io/)
    - нажать кнопку "Sign in"
    - Ввести логин и пароль 
    - Нажать кнопку "Submit"
expected-result: |
    Отобаражена главная страница с уведомлением "Successfully authenticated"
    
    
        
- summary: |
    Проверка восстановление пароля с несуществующими Email
requirement: |
    При неправильном Email пользователь должен получить сообщение об ошибке
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
test-data: |
    Email = плохойpass@gmail.com
steps:
    - на главной странице нажать кнопку "Sign in"
    - Нажать кнопку "Forgot your password" 
    - Ввести "Email"
    - Нажать кнопку "Submit"
expected-result: |
     Отображена ошибка "EMAIL_NOT_FOUND" на странице восстановление пароля с заголовком "Forgot your password?"
    
    
    
- summary: |
    Регистрация пользователя
requirement: |
    Пользователь зарегистрирован
prerequisites: |
    Зайти на сайт https://codebattle.hexlet.io/
test-data: |
    Niсkname = "bug"
    Email = "bug@gmail.com"
    Password = "123456789"
steps:
    - Нажать кнопку "Sign Up"
    - Ввести "Nickname"
    - Ввести "Email"
    - Ввести "Password"
    - Нажать кнопку "Submit"
expected-result: |
    Отобаражена главная страница с уведомлением "Successfully authenticated"
    
    
       
- summary: |
    Регистрация пользователя c Email без "@"
requirement: |
    Регистрация пользователя c неккоректным "email"
prerequisites: |
    Зайти на сайт https://codebattle.hexlet.io/
test-data: |
    Niсkname = "bug"
    Email = "bug_gmail.com"
    Password = "123456789"
steps:
    - Нажимать кнопку "Sign Up"
    - Ввести "Nickname"
    - Ввести "Email"
    - Ввести "Password"
    - Нажать кнопку "Submit"
expected-result: |
    на странице регистрация под полем "Email" отобаражена ошибка "Invalid email"
    
    
- summary: |
    Сменить имя ("Nikname") пользователя
requirement: |
    Пользователь может cменить своё имя
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
    Авторизироваться
test-data: |
    Email = test1@gmail.com
    Nickname = "test1"
    Password = "test123456"
steps:
    - На главной странице в хедере сайта нажать на своё имя (Nikname) или на аватар
    - В выпадающем меню выбрать "Settings"
    - В поле "Your name" стереть предыдущее имя и ввести новое
    - Нажать "Save"
expected-result: |
    Имя ("Nikname") изменено, отобаражено уведомление "Your settings has been changed" 
    
    
- summary: |
    Сменить стандартный язык програмтирования через настройки 
requirement: |
    Пользователь может cменить язык програмтирования через настройки 
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
    Авторизироваться
test-data: |
    Email = test1@gmail.com
    Nickname = "test2"
    Password = "test123456"
steps:
    - На главной странице в хедере сайта нажать на своё имя (Nikname) или на аватар
    - В выпадающем меню выбрать "Settings"
    - В выпадающем меню "Your weapon" выбрать язык програмтирования
    - Нажать "Save"
expected-result: |
    Стандартный язык програмтирования изменен, отобаражено уведомление "Your settings has been changed" 
    
    
        
- summary: |
    Сменить "Select sound type"
requirement: |
    Пользователь может cменить звук "Select sound type"
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
    Авторизироваться
test-data: |
    Email = test1@gmail.com
    Nickname = "test2"
    Password = "test123456"
steps:
    - На главной странице в хедере сайта нажать на своё имя (Nikname) или на аватар
    - В выпадающем меню выбрать "Settings"
    - В подзаголовке "Select sound type" выбрать чекбокс с нужным звуком
    - Нажать "Save"
expected-result: |
    Стандартный звук изменен, отобаражено уведомление "Your settings has been changed" 
   
   
- summary: |
    Выбрать громкость звука
requirement: |
    Пользователь может регулировать громкость звука
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
    Авторизироваться
test-data: |
    Email = test1@gmail.com
    Nickname = "test2"
    Password = "test123456"
steps:
    - На главной странице в хедере сайта нажать на своё имя (Nikname) или на аватар
    - В выпадающем меню выбрать "Settings"
    - В подзаголовке "Select sound level" отрегулировать громкость звука ползунком
    - Нажать "Save"
expected-result: |
    Громкость звука изменена, отобаражено уведомление "Your settings has been changed" 
    
    
- summary: |
    Проверить свою статистику 
requirement: |
    Пользователь доступна своя статистика
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
    Авторизироваться
test-data: |
    Email = test1@gmail.com
    Nickname = "test1"
    Password = "test123456"
steps:
    - На главной странице в хедере сайта нажать на своё имя (Nikname) или на аватар
    - В выпадающем меню выбрать "My Profile"
expected-result: |
    Отобаражена страница с подзаголовком "STATISTICS" с рангом и количество матчей, график побед поражений и сдач, график активности
    
    
- summary: |
    Проверить количество всех сыгранных матчей
requirement: |
    Пользователь доступна своя статистика
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
    Авторизироваться
test-data: |
    Email = test1@gmail.com
    Nickname = "test1"
    Password = "test123456"
steps:
    - На главной странице в хедере сайта нажать на своё имя (Nikname) или на аватар
    - В выпадающем меню выбрать "My Profile"
expected-result: |
    Отобаражена страница с подзаголовком "STATISTICS" с рангом и количество матчей, график побед поражений и сдач, график активности


- summary: |
    Создать игру с ботом зарегистрированному пользователю
requirement: |
    Зарегистрированный пользователь может создать игру с ботом
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
    Авторизироваться
test-data: |
    Email = test1@gmail.com
    Nickname = "test1"
    Password = "test123456"
steps:
    - На главной странице нажать кнопку "Create a game"
    - В появившимся окне сложность (Level) задачи от одной звезды, до четырёх (например одну)
    - В пункте "Game Type" выбрать игру с ботом "With a bot"
    - В пункте "Time control" выбрать время матча (например 10 min)
    - В пункте "Choose task by name or tags" выбрать задачу (например Rect_area)
    - Нажать кнопку "Create Battle"
expected-result: |
    Отобаражена страница игры с ботом



- summary: |
    Создание игры зарегистрированного пользователя с другим зарегистрированным пользователем
requirement: |
    Зарегистрированный пользователь может создать игру к которой может присоединится другой зарегистрированного пользователя
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
    Авторизироваться
test-data: |
    Email = test1@gmail.com
    Nickname = "test1"
    Password = "test123456"
steps:
    - На главной странице нажать кнопку "Create a game"
    - В появившимся окне сложность (Level) задачи от одной звезды, до четырёх (например одну)
    - В пункте "Game Type" выбрать игру с ботом "With other user"
    - В пункте "Time control" выбрать время матча (например 10 min)
    - В пункте "Choose task by name or tags" выбрать задачу (например Rect_area)
    - Нажать кнопку "Create Battle"
    - Отобаражена страница "Waiting for an opponent"
expected-result: |
    Когда другой пользователь присоединиться, будет отображена страница игры


- summary: |
    Создание игры зарегистрированного пользователя с другом (другим зарегистрированным пользователем) 
requirement: |
    Зарегистрированный пользователь может создать игру и пригласить другого зарегистрированного пользователя
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
    Авторизироваться
test-data: |
    Email = test1@gmail.com
    Nickname = "test1"
    Password = "test123456"
steps:
    - На главной странице нажать кнопку "Create a game"
    - В появившимся окне сложность (Level) задачи от одной звезды, до четырёх (например одну)
    - В пункте "Game Type" выбрать игру с ботом "With a friend"
    - В пункте "Time control" выбрать время матча (например 10 min)
    - В пункте "Choose opponent" написать имя друга (другого зарегистрированного пользователя) (например "Я_баг")
    - В пункте "Choose task by name or tags" выбрать задачу (например Rect_area)
    - Нажать кнопку "Create Battle"
expected-result: |
     Отображена главная страница с уведомлением "You invited Я_баг", другой зарегистрированный пользователь должен принять приглашение, после чего начнется матч


- summary: |
    Принять приглашение в матч
requirement: |
    Зарегистрированный пользователь может принять приглашение в матч от любого зарегистрированного пользователя 
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
    Авторизироваться
test-data: |
    Email = test1@gmail.com
    Nickname = "test1"
    Password = "test123456"
    Приглашение от другого зарегистрированного пользователя (например "Я_не_баг")
steps:
    - На главной странице нажать кнопку отображено уведомление о приглашении "Я_не_баг invited you"
    - Нажать кнопку "Accept"
expected-result: |
    Отобаражена страница игры

- summary: |
    Не принять приглашение в матч
requirement: |
    Зарегистрированный пользователь может принять приглашение в матч от любого зарегистрированного пользователя 
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
    Авторизироваться
test-data: |
    Email = test1@gmail.com
    Nickname = "test1"
    Password = "test123456"
    Приглашение от другого зарегистрированного пользователя (например "Я_не_баг")
steps:
    - На главной странице нажать кнопку отображено уведомление о приглашении "Я_не_баг invited you"
    - Нажать кнопку "Accept"
expected-result: |
    Отобаражена страница игры


- summary: |
     Сдаться в матче
requirement: |
     Пользователь может сдаться во время игры 
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
    Авторизироваться
test-data: |
    Email = test1@gmail.com
    Nickname = "test1"
    Password = "test123456"
    Приглашение от другого зарегистрированного пользователя (например "Я_не_баг")
steps:
    - На главной странице нажать кнопку отображено уведомление о приглашении "Я_не_баг invited you"
    - Нажать кнопку "Accept"
    - На странице игры нажать красную кнопку с изображением флага
    - Отобаражено окно с заголовком "Are you sure you want to give up?"
    - В окне нажать кнопку "Give up"
expected-result: |
    Отобаражена окно "If you read this you've lost the game" 



- summary: |
     Пользователь может переиграть матч
requirement: |
     Пользователь может переиграть начатый матч с ботом при проигрыше или сдаче
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
    Авторизироваться
test-data: |
    Email = test1@gmail.com
    Password = "test123456"
steps:
    - На главной странице нажать кнопку "Create a game"
    - В появившимся окне сложность (Level) задачи от одной звезды, до четырёх (например одну)
    - В пункте "Game Type" выбрать игру с ботом "With a bot"
    - В пункте "Time control" выбрать время матча (например 10 min)
    - В пункте "Choose task by name or tags" выбрать задачу (например Rect_area)
    - Нажать кнопку "Create Battle"
    - На странице игры нажать красную кнопку с изображением флага
    - Отобаражено окно с заголовком "Are you sure you want to give up?"
    - В окне нажать кнопку "Give up"
    - Нажать синюю кнопку "Rematch"
expected-result: |
    Отобаражена страница игры 



- summary: |
     Пользователь может выйти из матча 
requirement: |
     Пользователь может выйти из начатого матча с ботом
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
    Авторизироваться
test-data: |
    Email = test1@gmail.com
    Password = "test123456"
steps:
    - На главной странице нажать кнопку "Create a game"
    - В появившимся окне сложность (Level) задачи от одной звезды, до четырёх (например одну)
    - В пункте "Game Type" выбрать игру с ботом "With a bot"
    - В пункте "Time control" выбрать время матча (например 10 min)
    - В пункте "Choose task by name or tags" выбрать задачу (например Rect_area)
    - Нажать кнопку "Create Battle"
    - Нажать синюю кнопку "Back to Home"
expected-result: |
    Отобаражена главная страница сайта



- summary: |
    Зарегистрированный пользователь после конца матча может посмотреть ход матча
requirement: |
    после завершентя матча пользователь может посмотреть его ход
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
    Авторизироваться
test-data: |
    Email = test1@gmail.com
    Password = "test123456"
steps:
    - На главной странице нажать кнопку "Create a game"
    - В появившимся окне сложность (Level) задачи от одной звезды, до четырёх (например одну)
    - В пункте "Game Type" выбрать игру с ботом "With a bot"
    - В пункте "Time control" выбрать время матча (например 10 min)
    - В пункте "Choose task by name or tags" выбрать задачу (например Rect_area)
    - Нажать кнопку "Create Battle"
    - На странице игры нажать красную кнопку с изображением флага чтобы сдаться 
    - Нажать кнопку "Open history"
expected-result: |
    В редакторах отобразится за все введенные си 
    
    
- summary: |
    Зарегистрированный пользователь после конца матча может посмотреть историю игры
requirement: |
    Зарегистрированный пользователь может посмотреть историю игры после завершентя матча
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
    Авторизироваться
test-data: |
    Email = test1@gmail.com
    Password = "test123456"
steps:
    - На главной странице нажать кнопку "Create a game"
    - В появившимся окне сложность (Level) задачи от одной звезды, до четырёх (например одну)
    - В пункте "Game Type" выбрать игру с ботом "With a bot"
    - В пункте "Time control" выбрать время матча (например 10 min)
    - В пункте "Choose task by name or tags" выбрать задачу (например Rect_area)
    - Нажать кнопку "Create Battle"
    - На странице игры нажать красную кнопку с изображением флага чтобы сдаться 
    - Нажать кнопку "Open history"
    - Нажать кнопку "▷"
  expected-result: |
    Отобразилась вся история завершенной игры
    
    
        
- summary: |
    Зарегистрированный пользователь после завершения матча может посмотреть историю игры, через проигрыватель менять скорость воспроизведения
requirement: |
    Зарегистрированному пользователю доступна смена скорости воспроизведения при просмотре игры
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
    Авторизироваться
test-data: |
    Email = test1@gmail.com
    Password = "test123456"
steps:
    - На главной странице нажать кнопку "Create a game"
    - В появившимся окне сложность (Level) задачи от одной звезды, до четырёх (например одну)
    - В пункте "Game Type" выбрать игру с ботом "With a bot"
    - В пункте "Time control" выбрать время матча (например 10 min)
    - В пункте "Choose task by name or tags" выбрать задачу (например Rect_area)
    - Нажать кнопку "Create Battle"
    - На странице игры нажать красную кнопку с изображением флага чтобы сдаться 
    - Нажать кнопку "Open history"
    - Нажать кнопку "▷"
    - Нажимаем на кнопку с изображением шестеренки в проигрывателе
    - В появившимся списке нажимать кнопку "x2"
  expected-result: |
    Запись истории игры идет в два раза быстрее
    
    
            
- summary: |
    Зарегистрированный пользователь может скопировать ссылку истории игры из проигрывателя
requirement: |
    Зарегистрированному пользователю доступна возможность скопировать ссылку истории игры из проигрывателя
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
    Авторизироваться
test-data: |
    Email = test1@gmail.com
    Password = "test123456"
steps:
    - На главной странице нажать кнопку "Create a game"
    - В появившимся окне сложность (Level) задачи от одной звезды, до четырёх (например одну)
    - В пункте "Game Type" выбрать игру с ботом "With a bot"
    - В пункте "Time control" выбрать время матча (например 10 min)
    - В пункте "Choose task by name or tags" выбрать задачу (например Rect_area)
    - Нажать кнопку "Create Battle"
    - На странице игры нажать красную кнопку с изображением флага чтобы сдаться 
    - Нажать кнопку "Open history"
    - Нажать кнопку "▷"
    - Нажимаем на кнопку с изображением шестеренки в проигрывателе
    - Нажимаем кнопку "🔗" (Copy history game url at current record id)
  expected-result: |
    Скопировалась запись истории игры 
    
    
    
            
- summary: |
    Зарегистрированный пользователь после завершения матча может посмотреть историю игры, через ползунок проигрывателя посмотреть этапы игры
requirement: |
    Зарегистрированному пользователю доступно через ползунок проигрывателя, посмотреть этапы истории игры
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
    Авторизироваться
test-data: |
    Email = test1@gmail.com
    Password = "test123456"
steps:
    - На главной странице нажать кнопку "Create a game"
    - В появившимся окне сложность (Level) задачи от одной звезды, до четырёх (например одну)
    - В пункте "Game Type" выбрать игру с ботом "With a bot"
    - В пункте "Time control" выбрать время матча (например 10 min)
    - В пункте "Choose task by name or tags" выбрать задачу (например Rect_area)
    - Нажать кнопку "Create Battle"
    - На странице игры нажать красную кнопку с изображением флага чтобы сдаться 
    - Нажать кнопку "Open history"
    - Нажать кнопку "▷"
    - Двигать ползунок проигрывателя в начало 
  expected-result: |
    Отображение записи истории игры идет с выбранного 



- summary: |
    Проверка возможности продолжить играть проигранную игру
requirement: |
    Зарегистрированный пользователь может продолжить играть проигранную игру с ботом 
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
    Авторизироваться
test-data: |
    Email = test1@gmail.com
    Password = "test123456"
steps:
    - На главной странице нажать кнопку "Create a game"
    - В появившимся окне сложность (Level) задачи от одной звезды, до четырёх (например одну)
    - В пункте "Game Type" выбрать игру с ботом "With a bot"
    - В пункте "Time control" выбрать время матча (например 10 min)
    - В пункте "Choose task by name or tags" выбрать задачу (например Rect_area)
    - Нажать кнопку "Create Battle"
    - На странице игры нажать красную кнопку с изображением флага чтобы сдаться 
    - В окне с заголовком "Are you sure you want to give up?" подтвердить сдачу нажав кнопку "Give up"
    - В окне с заголовком "If you read this you've lost the game" нажать кнопку "I'll be back"
    - Нажать кнопку "Back to home"
    - На главной странице открыть вкладку "COMPLETED GAMES"
    - Нажать красную кнопку "Show" напротив нужной игры (например "Я_не_баг(190) PavlutOnWire(bot) 02.12 02:00")
    - Нажать кнопку "Rematch"
  expected-result: |
    Отобаражена страница игры



- summary: |
    Проверка возможности зарегистрированным пользователям просматривать историю нужной игры
requirement: |
    Зарегистрированным пользователям доступен список всех матчей на сайте (для просмотра истории игры)
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
    Авторизироваться
test-data: |
    Email = test1@gmail.com
    Password = "test123456"
steps:
    - На главной странице открыть вкладку "COMPLETED GAMES"
    - Нажать красную кнопку "Show" напротив нужной игры (например "Я_не_баг(190) PavlutOnWire(bot) 02.12 02:00")
    - Нажать кнопку "Open history"
    - Нажать кнопку "▷"
  expected-result: |
    Отобразилась запись завершенной игры





- summary: |
    Сдаться в матче с ботом незарегистрированному пользователю
requirement: |
    Незарегистрированный пользователь может сдаться в игре с ботом
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
test-data: |
    Не требуются
steps:
    - На главной странице нажать кнопку "TRY SIMPLE BATTLE"
    - На странице игры нажать красную кнопку с изображением флага
    - Отобаражено окно с заголовком "Are you sure you want to give up?"
    - В окне нажать кнопку "Give up"
expected-result: |
    Отобаражена окно "If you read this you've lost the game"
    На редакторе кода отобаражена картинка белого флага
    Отобаражена надпись "Your opponent has won the game" 



- summary: |
    Создать игру с ботом незарегистрированному пользователю
requirement: |
    Незарегистрированный пользователь может создать игру с ботом
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
test-data: |
    Не требуются
steps:
    - На главной странице нажать кнопку "TRY SIMPLE BATTLE"
expected-result: |
    Отобаражена страница игры с ботом



- summary: |
    Незарегистрированный пользователь может выйти из начатого матча
requirement: |
    Незарегистрированный пользователь может выйти из начатого матча
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
test-data: |
    Не требуются
steps:
    - На главной странице нажать кнопку "TRY SIMPLE BATTLE"
    - Нажать синюю кнопку "Back to Home"
expected-result: |
    Отобаражена начальная страница сайта



- summary: |
    Незарегистрированный пользователь после конца матча может посмотреть ход матча
requirement: |
    после завершентя матча пользователь может посмотреть его ход
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
test-data: |
    Не требуются
steps:
    - На главной странице нажать кнопку "TRY SIMPLE BATTLE"
    - На странице игры нажать красную кнопку с изображением флага чтобы сдаться 
    - Нажать кнопку "Open history"
expected-result: |
    В редакторах отобразится за все введенные си 
    
    
- summary: |
    Незарегистрированный пользователь после конца матча может посмотреть историю игры
requirement: |
    Незарегистрированный пользователь может посмотреть историю игры после завершентя матча
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
test-data: |
    Не требуются
steps:
    - На главной странице нажать кнопку "TRY SIMPLE BATTLE"
    - На странице игры нажать красную кнопку с изображением флага чтобы сдаться 
    - Нажать кнопку "Open history"
    - Нажать кнопку "▷"
  expected-result: |
    Отобразилась вся история завершенной игры
    
    
        
- summary: |
    Незарегистрированный пользователь после завершения матча может посмотреть историю игры, через проигрыватель менять скорость воспроизведения
requirement: |
    Незарегистрированному пользователю доступна смена скорости воспроизведения при просмотре игры
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
test-data: |
    Не требуются
steps:
    - На главной странице нажать кнопку "TRY SIMPLE BATTLE"
    - На странице игры нажать красную кнопку с изображением флага чтобы сдаться 
    - Нажать кнопку "Open history"
    - Нажать кнопку "▷"
    - Нажимаем на кнопку с изображением шестеренки в проигрывателе
    - В появившимся списке нажимать кнопку "x2"
  expected-result: |
    Запись истории игры идет в два раза быстрее
    
    
            
- summary: |
    Незарегистрированный пользователь может скопировать ссылку истории игры из проигрывателя
requirement: |
    Незарегистрированному пользователю доступна возможность скопировать ссылку истории игры из проигрывателя
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
test-data: |
    Не требуются
steps:
    - На главной странице нажать кнопку "TRY SIMPLE BATTLE"
    - На странице игры нажать красную кнопку с изображением флага чтобы сдаться 
    - Нажать кнопку "Open history"
    - Нажать кнопку "▷"
    - Нажимаем на кнопку с изображением шестеренки в проигрывателе
    - Нажимаем кнопку "🔗" (Copy history game url at current record id)
  expected-result: |
    Скопировалась запись истории игры 
    
    
    
            
- summary: |
    Незарегистрированный пользователь после завершения матча может посмотреть историю игры, через ползунок проигрывателя посмотреть этапы игры
requirement: |
    Незарегистрированному пользователю доступно через ползунок проигрывателя, посмотреть этапы истории игры
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
test-data: |
    Не требуются
steps:
    - На главной странице нажать кнопку "TRY SIMPLE BATTLE"
    - На странице игры нажать красную кнопку с изображением флага чтобы сдаться 
    - Нажать кнопку "Open history"
    - Нажать кнопку "▷"
    - Двигать ползунок проигрывателя в начало 
  expected-result: |
    Отображение записи истории игры идет с выбранного этапа
    
    
    

- summary: |
    Проверка Vim
requirement: |
    Во время игры можно использовать текстовый редактор "Vim"
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
    Авторизироваться
    Создать игру
test-data: |
    Email = test1@gmail.com
    Password = "test123456"
steps:
    - На странице игры нажать кнопку "Vim"
expected-result: |
    Редактор ввода изменен


- summary: |
    Проверка списка лидеров 
requirement: |
    Зарегистрированному пользователю доступен список лидеров с сортировкой по периоду
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
    Авторизироваться
test-data: |
    Email = test1@gmail.com
    Password = "test123456"
steps:
    - На главной странице под заголовком "LEADERBOARD"
    - Нажать на интересующий период (например "MONTH")
expected-result: |
    Отображен список лидеров за месяц



- summary: |
    Проверка возможности просматривать завершенные турниры
requirement: |
    Зарегистрированный пользователь может просматривать матчи из завершенных турниров
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
    Авторизироваться
test-data: |
    Email = test1@gmail.com
    Password = "test123456"
steps:
    - На главной странице открыть вкладку "TOURNAMENTS"
    - Под заголовком "Completed tournaments" выбрать нужный турнир (например "Test 2")
    - Нажать красную кнопку "Show"
    - Выбрать нужный матч (например в подзаголовке Final)
    - Нажать зелёную кнопку "Show"
  expected-result: |
    Отобаражена страница выбранной игры в турнире


- summary: |
    Проверка возможности принять участие в турнире
requirement: |
    Зарегистрированный пользователь может принять участие в турнире
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
    Авторизироваться
test-data: |
    Email = test1@gmail.com
    Password = "test123456"
steps:
    - На главной странице открыть вкладку "TOURNAMENTS"
    - Под заголовком "Live tournaments" выбрать нужный турнир (например "qa-engineer-project-85")
    - Нажать красную кнопку "Show"
    - Справа от загаловка "Qa-Engineer-Project-85" нажать кнопку "Join"
    - Нажать зелёную кнопку "Show"
  expected-result: |
    Отобаражена страница выбранной игры в турнире



 - summary: |
    Отправка сообщений в чате раздела "Tournament"
 requirement: |
    Зарегистрированный пользователь может писать сообщения в чат турнира
 prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
    Авторизироваться
 test-data: |
    Email = test1@gmail.com
    Password = "test123456"
 steps:
    - На главной странице открыть вкладку "TOURNAMENTS"
    - Под заголовком "Live tournaments" выбрать нужный турнир (например "qa-engineer-project-85")
    - В поле ввода текста написать сообщение (например "Баг залез в qa-engineer-project-85!!!!")
    - Нажать кнопку "Send" или "Enter" на клавиатуре
 expected-result: |
    В чате отображено отправленное сообщение



- summary: |
    Создание турнира тип "individual"
requirement: |
    Зарегистрированный пользователь может создавать турниры разных типов
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
    Авторизироваться
test-data: |
    Email = test1@gmail.com
    Password = "test123456"
    "Type" = "individual"
steps:
    - На главной странице в хедере сайта нажать на своё имя (Nikname) или на аватар
    - В выпадающем меню выбрать "Tournaments"
    - В под заголовком "Create a new tournament" написать данные в поля
    - В поле "Name" ввести название турнира (например "новый турнир")
    - В выпадпающем списке "Type" ввести тип турнира ("individual")
    - В выпадпающем списке "Access Type" выбрать публичность турнира (например "token")
    - В поле "starts at(utc)" ввести дату начала турнира (например 09.02.2023 18:00)
    - В выпадпающем списке "Level" выбрать уровень сложности задач (например easy)
    - В выпадпающем списке "Default language" выбрать язык программирования по умолчанию (например "python")
    - В поле "Match timeout in seconds" ввести время матча в секундах (например "300")
    - Нажать кнопку "Create"
expected-result: |
    Отображена страница турнира с заголовком (например "новый турнир")
    
    
    
- summary: |
    Проверка приватности ("token") турнира типа "individual"
requirement: |
    Зарегистрированный пользователь может создавать приватный турнир
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
    Авторизироваться
test-data: |
  Первая авторизация: Email = "test1@gmail.com", Password = "test123456"
    "Type" = "individual"
    "Access Type" = "token"
  Вторая авторизация: Email =" Я_не_баг@gmail.com", Password =  "123456789_Bug"
steps:
    - На главной странице в хедере сайта нажать на своё имя (Nikname) или на аватар
    - В выпадающем меню выбрать "Tournaments"
    - В под заголовком "Create a new tournament" написать данные в поля
    - В поле "Name" ввести название турнира (например "приватный турнир")
    - В выпадпающем списке "Type" ввести тип турнира ("individual")
    - В выпадпающем списке "Access Type" выбрать публичность турнира ("token")
    - В поле "starts at(utc)" ввести дату начала турнира (например 09.02.2023 18:00)
    - В выпадпающем списке "Level" выбрать уровень сложности задач (например easy)
    - В выпадпающем списке "Default language" выбрать язык программирования по умолчанию (например "python")
    - В поле "Match timeout in seconds" ввести время матча в секундах (например "500")
    - Нажать кнопку "Create"
    - Авторизоваться под другой учетной записью
    - На главной странице открыть вкладку "TOURNAMENTS"
expected-result: |
    В подзаголовке "Live tournaments" нет созданного приватного турнира (например "приватный турнир")
    
       
- summary: |
    Проверка приватности ("public") турнира типа "individual"
requirement: |
    Зарегистрированный пользователь может создать публичный турнир
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
    Авторизироваться
test-data: |
  Первая авторизация: Email = "test1@gmail.com", Password = "test123456"
    "Type" = "individual"
    "Access Type" = "public"
  Вторая авторизация: Email =" Я_не_баг@gmail.com", Password =  "123456789_Bug"
steps:
    - На главной странице в хедере сайта нажать на своё имя (Nikname) или на аватар
    - В выпадающем меню выбрать "Tournaments"
    - В под заголовком "Create a new tournament" написать данные в поля
    - В поле "Name" ввести название турнира (например "публичный турнир")
    - В выпадпающем списке "Type" ввести тип турнира ("individual")
    - В выпадпающем списке "Access Type" выбрать публичность турнира ("public")
    - В поле "starts at(utc)" ввести дату начала турнира (например 09.02.2023 18:00)
    - В выпадпающем списке "Level" выбрать уровень сложности задач (например easy)
    - В выпадпающем списке "Default language" выбрать язык программирования по умолчанию (например "python")
    - В поле "Match timeout in seconds" ввести время матча в секундах (например "500")
    - Нажать кнопку "Create"
    - Авторизоваться под другой учетной записью
    - На главной странице открыть вкладку "TOURNAMENTS"
expected-result: |
    В подзаголовке "Live tournaments" отображен созданный публичный турнир (например "публичный турнир")
    
    

- summary: |
    Создание турнира тип "team"
requirement: |
    Зарегистрированный пользователь может создать командный турнир
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
    Авторизироваться
test-data: |
    Email = test1@gmail.com
    Password = "test123456"
    "Type" = "team"
steps:
    - На главной странице в хедере сайта нажать на своё имя (Nikname) или на аватар
    - В выпадающем меню выбрать "Tournaments"
    - В под заголовком "Create a new tournament" заполнить поля
    - В поле "Name" ввести название турнира (например "новый командный турнир")
    - В выпадпающем списке "Type" ввести тип турнира ("team")
    - В выпадпающем списке "Access Type" выбрать публичность турнира (например "token")
    - В поле "starts at(utc)" ввести дату начала турнира (например 09.02.2023 18:00)
    - В полях "Team names" написать названия команд (например 09.02.2023)
    - В выпадпающем списке "Level" выбрать уровень сложности задач (например "новая команда 1" и "новая команда 2")
    - В выпадпающем списке "Default language" выбрать язык программирования по умолчанию (например "java")
    - В поле "Match timeout in seconds" ввести время матча в секундах (например "999")
    - Нажать кнопку "Create"
expected-result: |
    Отображена страница турнира с заголовком (например "новый командный турнир")
  
  
  
- summary: |
    Проверка приватности ("token") турнира типа "team"
requirement: |
    Зарегистрированный пользователь может создать приватный командный турнир
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
    Авторизироваться
test-data: |
  Первая авторизация: Email = "test1@gmail.com", Password = "test123456"
    "Type" = "team"
    "Access Type" = "public"
  Вторая авторизация: Email =" Я_не_баг@gmail.com", Password =  "123456789_Bug"
steps:
    - На главной странице в хедере сайта нажать на своё имя (Nikname) или на аватар
    - В выпадающем меню выбрать "Tournaments"
    - В под заголовком "Create a new tournament" заполнить поля
    - В поле "Name" ввести название турнира (например "новый приватный командный турнир")
    - В выпадпающем списке "Type" ввести тип турнира ("team")
    - В выпадпающем списке "Access Type" выбрать публичность турнира ("token")
    - В поле "starts at(utc)" ввести дату начала турнира (например 09.02.2023 18:00)
    - В полях "Team names" написать названия команд (например 09.02.2023)
    - В выпадпающем списке "Level" выбрать уровень сложности задач (например "новая приватная команда 1" и "новая приватная команда 2")
    - В выпадпающем списке "Default language" выбрать язык программирования по умолчанию (например "java")
    - В поле "Match timeout in seconds" ввести время матча в секундах (например "999")
    - Нажать кнопку "Create"
    - Авторизоваться под другой учетной записью
    - На главной странице открыть вкладку "TOURNAMENTS"
expected-result: |
   В подзаголовке "Live tournaments" отображен созданный публичный командный турнир (например "новый публичный командный турнир")
  
  
- summary: |
    Проверка приватности ("public") турнира типа "team"
requirement: |
    Зарегистрированный пользователь может создать публичный командный турнир
prerequisites:
    Зайти на сайт https://codebattle.hexlet.io/
    Авторизироваться
test-data: |
  Первая авторизация: Email = "test1@gmail.com", Password = "test123456"
    "Type" = "individual"
    "Access Type" = "public"
  Вторая авторизация: Email =" Я_не_баг@gmail.com", Password =  "123456789_Bug"
steps:
    - На главной странице в хедере сайта нажать на своё имя (Nikname) или на аватар
    - В выпадающем меню выбрать "Tournaments"
    - В под заголовком "Create a new tournament" заполнить поля
    - В поле "Name" ввести название турнира (например "новый командный турнир")
    - В выпадпающем списке "Type" ввести тип турнира ("team")
    - В выпадпающем списке "Access Type" выбрать публичность турнира (например "public")
    - В поле "starts at(utc)" ввести дату начала турнира (например 09.02.2023 18:00)
    - В полях "Team names" написать названия команд (например 09.02.2023)
    - В выпадпающем списке "Level" выбрать уровень сложности задач (например "новая команда 1" и "новая команда 2")
    - В выпадпающем списке "Default language" выбрать язык программирования по умолчанию (например "java")
    - В поле "Match timeout in seconds" ввести время матча в секундах (например "999")
    - Нажать кнопку "Create"
    - Авторизоваться под другой учетной записью
    - На главной странице открыть вкладку "TOURNAMENTS"
expected-result: |
    В подзаголовке "Live tournaments" нет созданного приватного турнира (например "новый командный турнир")
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
    
- summary: |
    Создание турнира без названия. 54.
  requirement: |
    Пользователь может создавать турниры.
    Корректное отображение и функционал элементов интерфейса.
  prerequisites:
    Перейти на страницу веб-приложения "CodeBattle" по ссылке (https://codebattle.hexlet.io/).
    Авторизоваться в приложении "CodeBattle"
  test-data: |
    Email = "test1test1.88@mail.ru"
    Password = "123456"
    "starts at(utc)" = "сегодня"
  steps:
    - Открываем меню нажатием на "аватар"
    - Нажимаем кнопку "Tournaments"
    - Выбираем "starts at(utc)"
    - Нажимаем кнопку "Create"
  expected-result: |
    Отображено сообщение под текстовым полем "Name" - "can't be blank"
    Отображен "tooltip" = "Заполните это поле."
    
- summary: |
    Проверка приватности турнира типа "token". 55.
  requirement: |
    Пользователь может создавать турниры.
    Корректное отображение и функционал элементов интерфейса.
    Туринры с типом доступа "token" доступны для просмотра и участия только приглашенным пользователям.
  prerequisites:
    Перейти на страницу веб-приложения "CodeBattle" по ссылке (https://codebattle.hexlet.io/).
    Авторизоваться в приложении "CodeBattle"
  test-data: |
    Email = "test1test1.88@mail.ru"
    Password = "123456"
    Название турнира = "секретный турнир"
    "Select" "Access Type" = "token"
    "starts at(utc)" = "сегодня"
  steps:
    - Открываем меню нажатием на "аватар"
    - Нажимаем кнопку "Tournaments"
    - В текстовое поле "Name" вводим название турнира
    - Выбираем "Select" "Access Type" 
    - Выбираем "starts at(utc)"
    - Нажимаем кнопку "Create"
    - Отправляем другому пользователю "Private url"
    - Ожидаем вступления противника
    - Нажимаем кнопку "Join"
    - Нажимаем кнопку "Promote"
    - Нажимаем кнопку "Join"
    - Противник также нажимает кнопку "Join"
    - Нажимаем кнопку "Start"
    - Нажиммаем кнопку "Join"
    - Пользователем не участвующем в турнире во время игры турнира просматирваем вкладку "lobby"
    - Просматривамем вкладку "Tournaments"
    - Просматриваем вкладку "Completed games"
    - Просматриваем список турниров на странице "tournaments"
    - Противник признает поражение
    - Нажимаем кнопку "Thanks"
    - Пользователем не участвующем в турнире после окончания турнира просматирваем вкладку "lobby"
    - Просматривамем вкладку "Tournaments"
    - Просматриваем вкладку "Completed games"
    - Просматриваем список турниров на странице "tournaments"
  expected-result: |
    Приватный турнир не отображен пользователям не участвующим в нем.
    Приватные игры данного турнира не отображены пользователям не участвующим в нем.
    
- summary: |
    Создание турнира прошедшей датой. 56.
  requirement: |
    Пользователь может создавать турниры.
    Турнир нельзя создавать с прошедшей датой начала турнира.
  prerequisites:
    Перейти на страницу веб-приложения "CodeBattle" по ссылке (https://codebattle.hexlet.io/).
    Авторизоваться в приложении "CodeBattle"
  test-data: |
    Email = "test1test1.88@mail.ru"
    Password = "123456"
    Название турнира = "...tour///"
    "Select" "Type" = "individual"
    "Select" "Access Type" = "public"
    "starts at(utc)" = "7 октября 1994"
    "Level" = "hard"
    "Default language" = "python"
    "Match timeout in seconds" = "500"
  steps:
    - Открываем меню нажатием на "аватар"
    - Нажимаем кнопку "Tournaments"
    - В текстовое поле "Name" вводим название турнира
    - Выбираем "Select" "Type"
    - Выбираем "Select" "Access Type" 
    - Выбираем "starts at(utc)"
    - Выбираем "Level"
    - Выбираем "Default language
    - Прописываем "Match timeout in seconds"
    - Нажимаем кнопку "Create"
  expected-result: |
    Отображена ошибка.
    Турнир не создан.
    
- summary: |
    Создание турнира с уже имеющимся названием. 57.
  requirement: |
    Пользователь может создавать турниры.
    "Name" турнира должно быть уникальным.
  prerequisites:
    Перейти на страницу веб-приложения "CodeBattle" по ссылке (https://codebattle.hexlet.io/).
    Авторизоваться в приложении "CodeBattle"
    Создать турнир с названием "123"
  test-data: |
    Email = "test1test1.88@mail.ru"
    Password = "123456"
    Название турнира = "123"
    "Select" "Type" = "individual"
    "Select" "Access Type" = "public"
    "starts at(utc)" = "сегодня"
    "Level" = "hard"
    "Default language" = "python"
    "Match timeout in seconds" = "500"
  steps:
    - Открываем меню нажатием на "аватар"
    - Нажимаем кнопку "Tournaments"
    - В текстовое поле "Name" вводим название турнира
    - Выбираем "Select" "Type"
    - Выбираем "Select" "Access Type" 
    - Выбираем "starts at(utc)"
    - Выбираем "Level"
    - Выбираем "Default language
    - Прописываем "Match timeout in seconds"
    - Нажимаем кнопку "Create"
  expected-result: |
    Отображена ошибка.
    Турнир не создан.
    
- summary: |
    Одновременное участие в двух играх. 58.
  requirement: |
    Пользователь может принимать участие одновременно только в одной игре.
  prerequisites:
    Перейти на страницу веб-приложения "CodeBattle" по ссылке (https://codebattle.hexlet.io/).
    Авторизоваться в приложении "CodeBattle"
  test-data: |
    Email = "test1test1.88@mail.ru"
    Password = "123456"
  steps:
    - Нажимаем на кнопку "Fight" рядом с ботом во вкладке "lobby" главной страницы приложения
    - Нажимаем кнопку "Codebattle by Hexlet's community"
    - Нажимаем на кнопку "Fight" рядом с ботом во вкладке "lobby" главной страницы приложения
  expected-result: |
    Отображена ошибка "already_in_a_game"
    Игра не создана.
    
    
- summary: |
    Одновременное участие в игре турнира и обычной игре. 59.
  requirement: |
    Пользователь может принимать участие одновременно только в одной игре.
  prerequisites:
    Перейти на страницу веб-приложения "CodeBattle" по ссылке (https://codebattle.hexlet.io/).
    Авторизоваться в приложении "CodeBattle"
    Создать турнир
    Вступить в список "Players"
    Начать турнир нажатием на кнопку "Start"
    Перейти на главную страницу приложения
  test-data: |
    Email = "test1test1.88@mail.ru"
    Password = "123456"
  steps:
    - Нажимаем на кнопку "Fight" рядом с ботом во вкладке "lobby" главной страницы приложения
  expected-result: |
    Отображена ошибка "already_in_a_game"
    Игра не создана.
    
- summary: |
    Одновременное участие в игре турнира и принятие приглашения на игру. 60.
  requirement: |
    Пользователь может принимать участие одновременно только в одной игре.
  prerequisites:
    Перейти на страницу веб-приложения "CodeBattle" по ссылке (https://codebattle.hexlet.io/).
    Авторизоваться в приложении "CodeBattle"
    Создать турнир
    Вступить в список "Players"
    Начать турнир нажатием на кнопку "Start"
    Перейти на главную страницу приложения
  test-data: |
    Email = "test1test1.88@mail.ru"
    Password = "123456"
  steps:
    - Нажимаем на кнопку "Invite"
    - Нажимаем на кнопку "Accept"
  expected-result: |
    Отображена ошибка "already_in_a_game"
    Игра не создана.
    
- summary: |
    Одновременное участие в обычной игре и игре турнира. 61.
  requirement: |
    Пользователь может принимать участие одновременно только в одной игре.
  prerequisites:
    Перейти на страницу веб-приложения "CodeBattle" по ссылке (https://codebattle.hexlet.io/).
    Авторизоваться в приложении "CodeBattle"
    Создать турнир
  test-data: |
    Email = "test1test1.88@mail.ru"
    Password = "123456"
    "level" = "3"
    "game type" = "With a friend"
    "choose opponent" = "pop"
    "time control" = "60"
  steps:
    - Нажимаем на кнопку "Create a game"
    - Выбираем "level"
    - Выбираем "game type"
    - Вводим "Nickname" противника
    - Нажимаем на "Nickname" противника
    - Выбираем "time control"
    - Нажимаем кнопку "Create invite"
    - Ждем согласия противника
    - Нажимаем на аватар
    - Нажимаем на кнопку "Tournaments"
    - Нажимаем кнопку "Show" у ранее созданного туринра
    - Нажимаем кнопку "Join"
    - Запускаем турнир
    - Нажимаем кнопку "Join"
  expected-result: |
    Отображена ошибка "already_in_a_game"
    Игра не создана.













- summary: |
    Создание задания. 41.
  requirement: |
    Пользователь может просматривать задания.
    Пользователь может создавать задания.
  prerequisites:
    Перейти на страницу веб-приложения "CodeBattle" по ссылке (https://codebattle.hexlet.io/).
    Авторизоваться в приложении "CodeBattle"
    "Task" = "apply_discount"
  test-data: |
    Email = "test1test1.88@mail.ru"
    Password = "123456"
    "Name" = "!?.,/()Абй :;}_{[]-+=>QwertY123456  7<""
    "Level" = "easy"
    "Visibility" = "hidden"
    "Tags" = "!?.,/()Абй :;}_{[]-+=>QwertY123456  7<""
    "Examples in markdown" = "!?.,/()Абй :;}_{[]-+=>QwertY123456  7<""
    "Description en" = "!?.,/()Абй :;}_{[]-+=>QwertY123456  7<""
    "Description ru" = "!?.,/()Абй :;}_{[]-+=>QwertY123456  7<""
  steps:
    - Открываем меню нажатием на "аватар"
    - Нажимаем кнопку "Tasks"
    - Нажимаем кнопку "Show" рядом с заданием
    - Нажимаем кнопку "Back"
    - Нажимаем кнопку "Create new task"
    - Вводим "Name"
    - Выбираем "Level"
    - Выбираем "Visibility"
    - Вводим "Tags"
    - Вводим "Examples in markdown"
    - Вводим "Description en"
    - Вводим "Description ru"
    - Нажимаем кнопку "Save"
    - Нажимаем кнопку "Show" рядом с созданным ранее заданием
  expected-result: |
    Отображено созданное нами задание.
    
- summary: |
    Создание сборника заданий. 42.
  requirement: |
    Пользователю доступна страница сборник заданий.
    Пользователь может просматривать сборник заданий.
    Пользователь может создавать сборники заданий.
  prerequisites:
    Перейти на страницу веб-приложения "CodeBattle" по ссылке (https://codebattle.hexlet.io/).
    Авторизоваться в приложении "CodeBattle"
  test-data: |
    Email = "test1test1.88@mail.ru"
    Password = "123456"
    "Name" = "!?.,/()Абй :;}_{[]-+=>QwertY123456  7<""
    "Visibility" = "hidden"
    "Task_ids" = "1"
  steps:
    - Открываем меню нажатием на "аватар"
    - Нажимаем кнопку "Tasks"
    - Нажимаем кнопку "Task packs"
    - Нажимаем кнопку "Create new task pack"
    - Вводим "Name"
    - Выбираем "Visibility" в "Select"
    - Вводим "Task_ids"
    - Нажимаем кнопку "Save"
  expected-result: |
    Отображено сообщение "TaskPack created successfully."
    Отображен созданный нами "Task pack".
    
- summary: |
    Редактирование созданного задания. 43
  requirement: |
    Пользователь может редактировать созданные задания.
  prerequisites:
    Перейти на страницу веб-приложения "CodeBattle" по ссылке (https://codebattle.hexlet.io/).
    Авторизоваться в приложении "CodeBattle"
  test-data: |
    Email = "test1test1.88@mail.ru"
    Password = "123456"
    "Name" = "1"
    "Level" = "easy"
    "Visibility" = "public"
    "Tags" = "e"
    "Examples in markdown" = "ТЕСТ"
    "Description en" = "TEST"
    "Description ru" = "Текст"
  steps:
    - Открываем меню нажатием на "аватар"
    - Нажимаем кнопку "Tasks"
    - Нажимаем кнопку "Show" рядом с заданием для редации
    - Нажимаем кнопку "Edit"
    - Вводим "Name"
    - Выбираем "Level"
    - Выбираем "Visibility"
    - Вводим "Tags"
    - Вводим "Examples in markdown"
    - Вводим "Description en"
    - Вводим "Description ru"
    - Нажимаем кнопку "Save"
  expected-result: |
    Отображено сообщение "Task updated successfully."
    Отображено задание.
    
- summary: |
    Редактирование сборника заданий. 44.
  requirement: |
    Пользователь может редактировать созданные сборники заданий.
  prerequisites:
    Перейти на страницу веб-приложения "CodeBattle" по ссылке (https://codebattle.hexlet.io/).
    Авторизоваться в приложении "CodeBattle"
  test-data: |
    Email = "test1test1.88@mail.ru"
    Password = "123456"
    "Name" = "1"
    "Visibility" = "public"
    "Task_ids" =  "1, 2, 3"
  steps:
    - Открываем меню нажатием на "аватар"
    - Нажимаем кнопку "Tasks"
    - Нажимаем кнопку "Task packs"
    - Нажимаем кнопку "Show" рядом с выбранным сборником
    - Нажимаем кнопку "Edit"
    - Вводим "Name"
    - Выбираем "Visibility" в "Select"
    - Вводим "Task_ids"
    - Нажимаем кнопку "Save"
  expected-result: |
    Отображено сообщение "TaskPack updated successfully."
    Отображен созданный нами "Task pack".

















    
  Select sound type  

Users rating
возможность сдаться
    
    
    
    
    
    
    
    
    
    
    
    
    
